"use strict";(globalThis.webpackChunkgratitude_token_project_docs=globalThis.webpackChunkgratitude_token_project_docs||[]).push([[2278],{7403:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"README","title":"\ud83c\udf0c Ethereal Offering Protocol","description":"A spiritually inspired decentralized platform for ceremonial offerings using soulbound NFTs and tokenomics.","source":"@site/docs/README.md","sourceDirName":".","slug":"/","permalink":"/gratitude-token-project_docs/docs/","draft":false,"unlisted":false,"editUrl":"https://github.com/drasticstatic/gratitude-token-project_docs/tree/main/docs/README.md","tags":[],"version":"current","frontMatter":{}}');var s=t(4848),r=t(8453);const l={},o="\ud83c\udf0c Ethereal Offering Protocol",d={},a=[{value:"\ud83c\udfd7\ufe0f Architecture Overview",id:"\ufe0f-architecture-overview",level:2},{value:"Core Contracts",id:"core-contracts",level:3},{value:"Flow",id:"flow",level:3},{value:"\ud83d\ude80 Local Development Setup",id:"-local-development-setup",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Installation &amp; Testing",id:"installation--testing",level:3},{value:"Expected Test Output",id:"expected-test-output",level:3},{value:"Expected Deployment Output",id:"expected-deployment-output",level:3},{value:"\ud83d\udcc1 Project Structure",id:"-project-structure",level:2},{value:"\ud83d\udd27 Technical Details",id:"-technical-details",level:2},{value:"Contract Interactions",id:"contract-interactions",level:3},{value:"Key Features",id:"key-features",level:3},{value:"\ud83e\uddea Testing &amp; Verification",id:"-testing--verification",level:2},{value:"Run Additional Tests",id:"run-additional-tests",level:3},{value:"Manual Verification Steps",id:"manual-verification-steps",level:3},{value:"\ud83c\udfaf Next Development Steps",id:"-next-development-steps",level:2},{value:"Immediate Improvements Needed",id:"immediate-improvements-needed",level:3},{value:"Suggested Enhancements",id:"suggested-enhancements",level:3},{value:"\ud83d\udd0d Code Review Notes",id:"-code-review-notes",level:2},{value:"Strengths",id:"strengths",level:3},{value:"Areas for Improvement",id:"areas-for-improvement",level:3},{value:"Security Considerations",id:"security-considerations",level:3},{value:"\ud83d\udea8 Important Notes",id:"-important-notes",level:2},{value:"\ud83e\udd14 Questions &amp; Suggestions",id:"-questions--suggestions",level:2},{value:"Questions for Consideration",id:"questions-for-consideration",level:3},{value:"Suggested Roadmap Priorities",id:"suggested-roadmap-priorities",level:3},{value:"\ud83d\udcde Development Commands",id:"-development-commands",level:2}];function c(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"-ethereal-offering-protocol",children:"\ud83c\udf0c Ethereal Offering Protocol"})}),"\n",(0,s.jsx)(n.p,{children:"A spiritually inspired decentralized platform for ceremonial offerings using soulbound NFTs and tokenomics."}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-architecture-overview",children:"\ud83c\udfd7\ufe0f Architecture Overview"}),"\n",(0,s.jsx)(n.h3,{id:"core-contracts",children:"Core Contracts"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"EtherealOfferingToken (EOT)"}),": ERC-20 token for offerings"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ProofOfBurn (PoB)"}),": Soulbound ERC-721 NFT proving offerings made"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"AltarBurn"}),": Central contract handling token burns and treasury transfers"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"flow",children:"Flow"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Users receive EOT tokens (minted by owner)"}),"\n",(0,s.jsx)(n.li,{children:"Users burn EOT at the Altar with an intention message"}),"\n",(0,s.jsx)(n.li,{children:"Burned tokens go to treasury, user receives soulbound PoB NFT"}),"\n",(0,s.jsx)(n.li,{children:"PoB NFTs are non-transferable proof of ceremonial participation"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-local-development-setup",children:"\ud83d\ude80 Local Development Setup"}),"\n",(0,s.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Node.js (v16+ recommended)"}),"\n",(0,s.jsx)(n.li,{children:"npm or yarn"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"installation--testing",children:"Installation & Testing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# 1. Install dependencies\nnpm install\nnpm install @radix-ui/react-slot class-variance-authority clsx tailwind-merge tailwindcss autoprefixer postcss tailwindcss-animate\n\n# 2. Run tests (RECOMMENDED FIRST)\nnpx hardhat test\n\n# 3. Start local blockchain\nnpx hardhat node\n\n# 4. Deploy contracts (in new terminal) Example: npx hardhat run scripts/deploy.js --network localhost\nsleep 3 && npx hardhat run scripts/deploy_all.js --network localhost\nnpx hardhat run scripts/amm_seed.js --network localhost\n"})}),"\n",(0,s.jsx)(n.h3,{id:"expected-test-output",children:"Expected Test Output"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"AltarBurn + PoB flow\n  \u2713 user can burn EOT and receive PoB NFT\n"})}),"\n",(0,s.jsx)(n.h3,{id:"expected-deployment-output",children:"Expected Deployment Output"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Deploying with: 0x...\nEOT: 0x...\nPoB: 0x...\nAltar: 0x...\nSet altar as PoB minter\nMinted 1000 EOT to deployer\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-project-structure",children:"\ud83d\udcc1 Project Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u251c\u2500\u2500 contracts/\n\u2502   \u251c\u2500\u2500 EtherealOfferingToken.sol    # ERC-20 offering token\n\u2502   \u251c\u2500\u2500 ProofOfBurn.sol              # Soulbound NFT proof\n\u2502   \u2514\u2500\u2500 AltarBurn.sol                # Burn mechanism\n\u251c\u2500\u2500 scripts/\n\u2502   \u2514\u2500\u2500 deploy.js                    # Deployment script\n\u251c\u2500\u2500 test/\n\u2502   \u2514\u2500\u2500 altar.test.js                # Core functionality tests\n\u251c\u2500\u2500 frontend/\n\u2502   \u251c\u2500\u2500 src/\n\u2502   \u2502   \u251c\u2500\u2500 BurnButton.js            # React burn interface\n\u2502   \u2502   \u2514\u2500\u2500 store/                   # Redux state management\n\u2502   \u2514\u2500\u2500 package.json\n\u251c\u2500\u2500 hardhat.config.js                # Hardhat configuration\n\u2514\u2500\u2500 package.json\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-technical-details",children:"\ud83d\udd27 Technical Details"}),"\n",(0,s.jsx)(n.h3,{id:"contract-interactions",children:"Contract Interactions"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Minting EOT"}),": Only owner can mint tokens"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Burning Process"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"User approves Altar to spend EOT"}),"\n",(0,s.jsxs)(n.li,{children:["User calls ",(0,s.jsx)(n.code,{children:"burnOffering(amount, intention, tokenURI)"})]}),"\n",(0,s.jsx)(n.li,{children:"Tokens transferred to treasury"}),"\n",(0,s.jsx)(n.li,{children:"Soulbound PoB NFT minted to user"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"key-features",children:"Key Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Soulbound NFTs"}),": PoB tokens cannot be transferred (except burn)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Treasury System"}),": All burned tokens go to designated treasury address"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Intention Tracking"}),": Each burn includes an intention message"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Admin Controls"}),": Altar admin can update treasury and proof contract"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-testing--verification",children:"\ud83e\uddea Testing & Verification"}),"\n",(0,s.jsx)(n.h3,{id:"run-additional-tests",children:"Run Additional Tests"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Test specific functionality\nnpx hardhat test --grep "burn"\n\n# Run with gas reporting\nREPORT_GAS=true npx hardhat test\n\n# Test on different networks\nnpx hardhat test --network hardhat\n'})}),"\n",(0,s.jsx)(n.h3,{id:"manual-verification-steps",children:"Manual Verification Steps"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Deploy contracts locally"}),"\n",(0,s.jsx)(n.li,{children:"Mint EOT to test address"}),"\n",(0,s.jsx)(n.li,{children:"Approve Altar contract"}),"\n",(0,s.jsx)(n.li,{children:"Execute burn with intention"}),"\n",(0,s.jsx)(n.li,{children:"Verify PoB NFT ownership"}),"\n",(0,s.jsx)(n.li,{children:"Confirm treasury received tokens"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-next-development-steps",children:"\ud83c\udfaf Next Development Steps"}),"\n",(0,s.jsx)(n.h3,{id:"immediate-improvements-needed",children:"Immediate Improvements Needed"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Expand Test Coverage"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Test edge cases (zero amounts, unauthorized access)"}),"\n",(0,s.jsx)(n.li,{children:"Test admin functions"}),"\n",(0,s.jsx)(n.li,{children:"Test soulbound transfer restrictions"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Add Input Validation"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Intention length limits"}),"\n",(0,s.jsx)(n.li,{children:"TokenURI format validation"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Enhanced Security"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Add reentrancy guards"}),"\n",(0,s.jsx)(n.li,{children:"Implement pause functionality"}),"\n",(0,s.jsx)(n.li,{children:"Add emergency withdrawal"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"suggested-enhancements",children:"Suggested Enhancements"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-solidity",children:"// Add to AltarBurn.sol\nmapping(address => uint256) public totalOffered;\nmapping(address => uint256) public offeringCount;\n\n// Add minimum offering amount\nuint256 public minimumOffering = 1e18; // 1 EOT\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-code-review-notes",children:"\ud83d\udd0d Code Review Notes"}),"\n",(0,s.jsx)(n.h3,{id:"strengths",children:"Strengths"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Clean, readable contract code"}),"\n",(0,s.jsx)(n.li,{children:"Proper use of OpenZeppelin standards"}),"\n",(0,s.jsx)(n.li,{children:"Soulbound implementation is correct"}),"\n",(0,s.jsx)(n.li,{children:"Basic test coverage exists"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"areas-for-improvement",children:"Areas for Improvement"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Missing comprehensive error handling"}),"\n",(0,s.jsx)(n.li,{children:"No events for admin actions"}),"\n",(0,s.jsx)(n.li,{children:"Limited access control granularity"}),"\n",(0,s.jsx)(n.li,{children:"Frontend needs wallet connection logic"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"All contracts use standard patterns"}),"\n",(0,s.jsx)(n.li,{children:"No obvious vulnerabilities detected"}),"\n",(0,s.jsx)(n.li,{children:"Recommend audit before mainnet deployment"}),"\n",(0,s.jsx)(n.li,{children:"Consider implementing timelock for admin functions"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-important-notes",children:"\ud83d\udea8 Important Notes"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Treasury Address"}),": Currently set to deployer - change for production"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Owner Privileges"}),": EOT owner can mint unlimited tokens"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Admin Powers"}),": Altar admin can change treasury and proof contract"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Gas Costs"}),": Burning involves multiple operations (transfer + mint)"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-questions--suggestions",children:"\ud83e\udd14 Questions & Suggestions"}),"\n",(0,s.jsx)(n.h3,{id:"questions-for-consideration",children:"Questions for Consideration"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Should there be a maximum supply for EOT?"}),"\n",(0,s.jsx)(n.li,{children:"How will the treasury be governed in production?"}),"\n",(0,s.jsx)(n.li,{children:"Should there be a cooldown period between burns?"}),"\n",(0,s.jsx)(n.li,{children:"How will tokenURI metadata be managed?"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"suggested-roadmap-priorities",children:"Suggested Roadmap Priorities"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 Complete comprehensive testing"}),"\n",(0,s.jsx)(n.li,{children:"\ud83d\udd04 Add mushroom NFT daily drop system"}),"\n",(0,s.jsx)(n.li,{children:"\ud83d\udd04 Implement DAO governance for treasury"}),"\n",(0,s.jsx)(n.li,{children:"\ud83d\udd04 Build frontend wallet integration"}),"\n",(0,s.jsx)(n.li,{children:"\ud83d\udd04 Add DID/identity layer"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-development-commands",children:"\ud83d\udcde Development Commands"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Compile contracts\nnpx hardhat compile\n\n# Clean artifacts\nnpx hardhat clean\n\n# Run specific test file\nnpx hardhat test test/altar.test.js\n\n# Deploy to specific network\nnpx hardhat run scripts/deploy.js --network <network-name>\n\n# Start console\nnpx hardhat console --network localhost\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"This project is for educational and spiritual purposes. Not financial advice."})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var i=t(6540);const s={},r=i.createContext(s);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);