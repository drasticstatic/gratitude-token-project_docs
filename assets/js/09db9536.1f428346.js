"use strict";(globalThis.webpackChunkgratitude_token_project_docs=globalThis.webpackChunkgratitude_token_project_docs||[]).push([[6645],{5422:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"SyncDocs2025_10-24/frontend/state-and-dataflow","title":"State and Data Flow (Wallet \u2192 UI \u2192 Contracts)","description":"How user state flows through wallet connection, UI components, and contract interactions.","source":"@site/docs/SyncDocs2025_10-24/frontend/state-and-dataflow.md","sourceDirName":"SyncDocs2025_10-24/frontend","slug":"/SyncDocs2025_10-24/frontend/state-and-dataflow","permalink":"/gratitude-token-project_docs/docs/SyncDocs2025_10-24/frontend/state-and-dataflow","draft":false,"unlisted":false,"editUrl":"https://github.com/drasticstatic/gratitude-token-project_docs/tree/main/docs/SyncDocs2025_10-24/frontend/state-and-dataflow.md","tags":[],"version":"current","frontMatter":{"title":"State and Data Flow (Wallet \u2192 UI \u2192 Contracts)","description":"How user state flows through wallet connection, UI components, and contract interactions."},"sidebar":"docs","previous":{"title":"Front-End Overview","permalink":"/gratitude-token-project_docs/docs/SyncDocs2025_10-24/frontend/overview"},"next":{"title":"Styling and Theming Guide","permalink":"/gratitude-token-project_docs/docs/SyncDocs2025_10-24/frontend/styling-and-theming"}}');var o=t(4848),r=t(8453);const c={title:"State and Data Flow (Wallet \u2192 UI \u2192 Contracts)",description:"How user state flows through wallet connection, UI components, and contract interactions."},a=void 0,i={},l=[];function d(n){const e={li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.p,{children:"Core idea: Keep the user\u2019s intent visible and safe. We surface connection status, network, and action consequences clearly."}),"\n",(0,o.jsx)(e.p,{children:"Primary touchpoints:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Wallet connection UX: docs/src/components/CustomConnectButton.js"}),"\n",(0,o.jsx)(e.li,{children:"Connection reminders: docs/src/components/WalletConnectionBanner.js"}),"\n",(0,o.jsx)(e.li,{children:"Action modals: docs/src/components/modals/* (e.g., Treasury, Altar, Governance)"}),"\n",(0,o.jsx)(e.li,{children:"Transaction feedback: docs/src/components/TransactionHistory.js"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"Common flow:"}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsx)(e.li,{children:"User clicks Connect in CustomConnectButton"}),"\n"]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Uses wagmi useConnect and injected connector when available"}),"\n",(0,o.jsx)(e.li,{children:"Safari fallback opens Web3BrowserModal to guide installing a wallet"}),"\n"]}),"\n",(0,o.jsxs)(e.ol,{start:"2",children:["\n",(0,o.jsx)(e.li,{children:"While disconnected"}),"\n"]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"WalletConnectionBanner renders a fixed, gentle prompt at top offset beneath navbar"}),"\n",(0,o.jsx)(e.li,{children:"It automatically hides while modals are open or while connecting"}),"\n"]}),"\n",(0,o.jsxs)(e.ol,{start:"3",children:["\n",(0,o.jsx)(e.li,{children:"When connected"}),"\n"]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"UI reveals action buttons and modals (e.g., Donate, Swap, Governance proposals)"}),"\n",(0,o.jsx)(e.li,{children:"Modals orchestrate validation, user confirmation, and transaction submission"}),"\n"]}),"\n",(0,o.jsxs)(e.ol,{start:"4",children:["\n",(0,o.jsx)(e.li,{children:"After submission"}),"\n"]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"TransactionHistory (or local patterns) can surface pending/confirmed states"}),"\n",(0,o.jsx)(e.li,{children:"Errors are presented as actionable instructions (e.g., wrong network \u2192 switch)"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"Patterns to emulate:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Defensive UX: Detect Safari, check window.ethereum presence, show education modal when needed"}),"\n",(0,o.jsx)(e.li,{children:"Progressive disclosure: don\u2019t show advanced actions until wallet is connected and correct network is selected"}),"\n",(0,o.jsx)(e.li,{children:"Clear styling signals: success (greens), warnings (ambers), destructive (reds)"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"Future-ready suggestions:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Lift shared state into a React Context if you need global wallet/tx history across many pages"}),"\n",(0,o.jsx)(e.li,{children:"Standardize a toast/notification system for background confirmations"}),"\n",(0,o.jsx)(e.li,{children:"Add analytics hooks (privacy-preserving) to understand where users struggle"}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>c,x:()=>a});var s=t(6540);const o={},r=s.createContext(o);function c(n){const e=s.useContext(r);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:c(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);