"use strict";(globalThis.webpackChunkgratitude_token_project_docs=globalThis.webpackChunkgratitude_token_project_docs||[]).push([[4827],{2248:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"frontend/testing","title":"Front-End Testing","description":"We test to protect people and treasuries, not just code.","source":"@site/docs/frontend/testing.md","sourceDirName":"frontend","slug":"/frontend/testing","permalink":"/gratitude-token-project_docs/docs/frontend/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/drasticstatic/gratitude-token-project_docs/tree/main/docs/frontend/testing.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7}}');var i=t(4848),r=t(8453);const o={sidebar_position:7},l="Front-End Testing",c={},a=[{value:"What to Test",id:"what-to-test",level:2},{value:"Tools",id:"tools",level:2},{value:"Patterns",id:"patterns",level:2},{value:"Example Test Outline",id:"example-test-outline",level:2},{value:"CI",id:"ci",level:2},{value:"Manual QA",id:"manual-qa",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"front-end-testing",children:"Front-End Testing"})}),"\n",(0,i.jsx)(n.p,{children:"We test to protect people and treasuries, not just code."}),"\n",(0,i.jsx)(n.h2,{id:"what-to-test",children:"What to Test"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Critical flows: connect wallet, network switch, submit proposal, make offering, swap"}),"\n",(0,i.jsx)(n.li,{children:"Error states: wrong network, rejection, insufficient funds, RPC down"}),"\n",(0,i.jsx)(n.li,{children:"Accessibility: tabbability, ARIA labels, color contrast"}),"\n",(0,i.jsx)(n.li,{children:"Visual regressions (optional): snapshot of critical components"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"tools",children:"Tools"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"React Testing Library: behavior-focused tests"}),"\n",(0,i.jsx)(n.li,{children:"Jest/Vitest: unit and integration tests"}),"\n",(0,i.jsx)(n.li,{children:"MSW: mock network requests"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"patterns",children:"Patterns"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Mock provider/wallet in test harness"}),"\n",(0,i.jsx)(n.li,{children:"Render components with minimal viable context"}),"\n",(0,i.jsx)(n.li,{children:"Prefer user-centric assertions (visible text, roles)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example-test-outline",children:"Example Test Outline"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"describe('Governance', () => {\n  it('renders proposals and handles vote', async () => {\n    // mock proposals\n    // render <Governance />\n    // expect list, click vote, assert confirmation\n  });\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"ci",children:"CI"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Run tests on PRs"}),"\n",(0,i.jsx)(n.li,{children:"Fail fast on flake by reducing reliance on timeouts"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"manual-qa",children:"Manual QA"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Test on mobile devices and slow networks"}),"\n",(0,i.jsx)(n.li,{children:"Verify explorer links and post-tx UX"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Test what matters most to the community. Confidence is a feature."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var s=t(6540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);